#!/bin/bash

# /etc/init.d/tracking-push
# Description: tracking-push
# ————————————————–
#
### BEGIN INIT INFO
# Provides: tracking-push 
# Required-Start: $network $local_fs $syslog
# Required-Stop: $local_fs $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Description: tracking-push
### END INIT INFO

PIDDIR=/var/run/tracking-push
PIDFILE=/var/run/tracking-push/tracking-push
DAEMONLOG=/var/log/tracking-push/daemon/tracking-push.log

if [ ! -d $PIDDIR ] ; then
        mkdir -p $PIDDIR
fi


case "$1" in
 start)
   if [ ! -f $PIDFILE ] ; then
                echo "Starting tracking-push..."
                su root -c "nohup /usr/bin/python -u /opt/tracking-push/tracking-push.py > $DAEMONLOG 2>&1 &"
   else
         for pid in $(cat $PIDFILE) ; do
                if ! ps --no-headers p "$pid" | grep tracking-push > /dev/null ; then
                        echo "Starting tracking-push..."
                        su root -c "nohup /usr/bin/python -u /opt/tracking-push/tracking-push.py > $DAEMONLOG 2>&1 &"
                else
                        echo "The tracking-push is already running!!"
        fi
   done
  fi
  ;;
 stop)
  if [ ! -f $PIDFILE ] ; then
                echo "The tracking-push is not running"
  else
        for pid in $(cat $PIDFILE) ; do
                if ! ps --no-headers p "$pid" | grep tracking-push > /dev/null ; then
                        echo "The tracking-push is not running"
                else
                        echo "Stopping tracking-push..."
                        kill -9 $pid
                fi
        done
  fi
  ;;

 restart)
   $0 stop
   sleep 1
   $0 start
   ;;

 status)
  if [ ! -f $PIDFILE ] ; then
                echo "The tracking-push is not running"
  else
        for pid in $(cat $PIDFILE) ; do
                if ! ps --no-headers p "$pid" | grep tracking-push > /dev/null ; then
                        echo "The tracking-push is not running"
                else
                        echo "The tracking-push is running"
                fi
        done
  fi
 ;;

 *)
   echo "usage: $0 {start|stop|restart|status}"  
esac

exit 0


